<?php
    $this->headTitle($this->translate('Customer Payments'));

    $this->loader()->append('jquery_dataTables')
        ->append('jquery_dropdown');

    $this->loadDatejs(Bootstrap::$locale);
    
    Bootstrap::getZendCurrency();
?>

<?php $this->placeholder('foot')->captureStart() ?>
<script type="text/javascript">
    $(document).ready(function(){

        $.fn.dataTableExt.aoFeatures.push({
            "fnInit": function(oSettings) {
                return $('<ul class="dataTables_add dropdown-container"><li class="dropdown btn-group">' +
                    '<a href="#" title="<?= $this->translate('Actions') ?>" class="btn">' +
                    '<?= addslashes($this->translate('Actions')) ?></a>' +
                    '<button type="button" class="btn dropdown-toggle" data-toggle="dropdown">' +
                    '<span class="caret"></span></button>' +
                    '<ul class="dropdown-menu"><li><a href="/admin/customers/transactions/format/csv/year/<?= (int) $this->year ?>" title="<?= $this->translate('Export to a spreadsheet program') ?>">' +
                    '<?= $this->translate('Export to CSV') ?></a></li></ul></li></ul>')[0];
            },
            "cFeature": "a",
            "sFeature": "Add"
        });
        
        $.fn.dataTableExt.aoFeatures.push({
            "fnInit": function(oSettings) {
                return $(
                    '<form class="dataTables_year" action="/admin/customers/transactions" method="get" style="float: left; padding-right: 10px">' +
                    <?php if (count($this->years) > 1) { ?>
                        '<label for="year"><?= addslashes($this->translate('Year')); ?>: </label>' +
                        '<?=
                            addslashes(str_replace("\n", '', $this->formSelect(
                                'year',
                                $this->year,
                                array(),
                                $this->years
                            )));
                        ?>' +
                    <?php } ?>
                    '</form> '
                )[0];
            },
            "cFeature": "y",
            "sFeature": "Year"
        });
        
        var table = $("#transactions").dataTable({
            "bJQueryUI": true,
            "bAutoWidth": false,
            "bDeferRender": true,
            "bLengthChange": false,
            "bProcessing": true,
            "iDisplayLength": 50,
            "iDeferLoading": <?= $this->foundRows ?>,
            "aaSorting": [[2, "desc"]],
            "aoColumns": [ 
                {
                    "sType": "string",
                    "mDataProp": "id"
                },
                {
                    "sType": "text",
                    "mDataProp": "customer",
                    "fnRender": function (oObj) {
                        if (!oObj.aData.hasOwnProperty("DT_RowId")) {
                            return oObj.aData.customer;
                        } else {
                            if (oObj.aData.customerLastName || oObj.aData.customerFirstName) {
                                return oObj.aData.customerLastName
                                        .replace(/&/g,'&amp;')
                                        .replace(/</g,'&lt;')
                                        .replace(/>/g,'&gt;') + ", " +
                                    oObj.aData.customerFirstName
                                        .replace(/&/g,'&amp;')
                                        .replace(/</g,'&lt;')
                                        .replace(/>/g,'&gt;');
                            } else {
                                return '';
                            }
                        }
                    }
                },
                {
                    "sType": "text",
                    "mDataProp": "transactionDate",
                    "fnRender": function (oObj) {
                        if (!oObj.aData.hasOwnProperty("DT_RowId")) {
                            return oObj.aData.transactionDate;
                        } else {
                            return oObj.aData.transactionDate.replace(/&/g,'&amp;')
                                    .replace(/</g,'&lt;')
                                    .replace(/>/g,'&gt;');
                        }
                    }
                },
                {
                    "sType": "text",
                    "mDataProp": "total"
                },
                {
                    "sType": "text",
                    "mDataProp": "remainingToApply"
                },
                {
                    "sType": "text",
                    "mDataProp": "appliedToInvoices",
                    "fnRender": function (oObj) {
                        if (!oObj.aData.hasOwnProperty("DT_RowId")) {
                            return oObj.aData.appliedToInvoices;
                        } else {
                            if (oObj.aData.appliedToInvoices != '0' && oObj.aData.appliedToInvoices.length) {
                                var $invoices = [],
                                    $return = '';
                                if (oObj.aData.appliedToInvoices.indexOf(',') != -1) {
                                    $invoices = oObj.aData.appliedToInvoices.split(',');
                                } else {
                                    $invoices = [oObj.aData.appliedToInvoices];
                                }
                                
                                for (var $count = $invoices.length, $c = 0; $c < $count; ++$c) {
                                    $return += '<a href="/admin/customers/invoice?id=' + parseInt($invoices[$c]) + '">' + parseInt($invoices[$c]) + '</a>';
                        
                                    if ($c + 1 != $count) {
                                        $return += '; '
                                    }
                                }
                                
                                return $return;
                            } else {
                                return '';
                            }
                        }
                    }
                },
                { 
                    "bSortable": false,
                    "bSearchable": false,
                    "mDataProp": "_actions",
                    "sClass": "right",
                    "fnRender": function (oObj) {
                        if (!oObj.aData.hasOwnProperty("DT_RowId")) {
                            return oObj.aData._actions;
                        }
                        var menu = '<ul class="dropdown-container">' +
                            '<li class="dropdown btn-group">' +
                            '<a href="/admin/customers/transaction?id=' + parseInt(oObj.aData.id) + '" ' +
                            'title="<?= addslashes($this->translate('View payment')) ?>" class="btn"> ' +
                            '<?= addslashes($this->translate('View')) ?></a>' +
                            '<button type="button" class="btn dropdown-toggle" data-toggle="dropdown">' +
                            '<span class="caret"></span></button>' +
                            '<ul class="dropdown-menu">';
                        
                        if (oObj.aData.customerEmail || oObj.aData.customerSecondaryEmail) {
                            menu += '<li><a href="/admin/customers/email?id=' + parseInt(oObj.aData.customerId) + '"><?= addslashes($this->translate('Email')) ?></a></li>'
                        }
                        
                        menu += '<li class="divider"></li>' +
                            '<li><a class="delete" href="/admin/customers/transaction?a=delete&id=' + parseInt(oObj.aData.id) + '"><?= addslashes($this->translate('Delete')) ?></a></li>';
                        
                        menu += '</ul></li></ul>';
                        
                        return menu;
                    }
                }
            ],
            "bSortClasses": false,
            "sAjaxSource": "<?= addslashes($this->Url()) ?>",
            "bServerSide": true,
            "sDom": '<"H"yaf<"clear">r<"right"ip>>t<"F"<"right"ip>>'
        })
        .delegate("tbody tr", "mouseover mouseout", function(e) {
            if (e.type == "mouseover") {
                $(e.currentTarget).addClass('hover');
            } else {
                $(e.currentTarget).removeClass('hover');
            }
        })
        .delegate(".delete", "click", function(){
            return window.confirm("<?= $this->translate('Are you sure you want to delete this payment?  No turning back after a payment delete.'); ?>");
        });
        
        new FixedHeader(table);
        
        $(".dataTables_year select").change(function(){
            window.location = '/admin/customers/transactions/year/' + $(this).val();
        });
        
        $('.dropdown-toggle').dropdown();
    });
</script>
<?php $this->placeholder('foot')->captureEnd() ?>

<h2>
    <span class="icon-menu icon-menu-members" style="float: left; margin: -10px 7px 0 0;"></span>
    <?= $this->translate('Customer Payments') ?>
</h2>

<section class="container_12">
    <article class="grid_9">

        <?php if (!empty($this->messages)) { ?>
            <section class="info ui-widget ui-state-highlight ui-corner-all">
                <div>
                    <i class="fa fa-info-circle"></i>
                    <strong><?= $this->translate('Hey!'); ?></strong>
                    <?= $this->escape(implode('; ', $this->messages)); ?>
                </div>
            </section>
        <?php } ?>

        <?php if (count($this->transactions)) { ?>
        
            <table id="transactions" class="display">
                <thead>
                    <tr>
                        <th
                            width="7%"
                            title="<?= $this->translate('Payment ID') ?>">
                                <?= $this->translate('ID'); ?>
                        </th>
                        <th
                            width="23%"
                            title="<?= $this->translate('Customer') ?>">
                                <?= $this->translate('Customer'); ?>
                        </th>
                        <th
                            width="15%"
                            title="<?= $this->translate('Payment Date') ?>">
                                <?= $this->translate('Date') ?>
                        </th>
                        <th
                            width="15%"
                            title="<?= $this->translate('Payment Amount') ?>">
                                <?= $this->translate('Amount') ?>
                        </th>
                        <th
                            width="15%"
                            title="<?= $this->translate('Payment Amount To Be Applied To Invoices') ?>">
                                <?= $this->translate('To Apply') ?>
                        </th>
                        <th
                            width="8%"
                            title="<?= $this->translate('Invoice Payment Applied To') ?>">
                                <?= $this->translate('Invoice') ?>
                        </th>
                        <th
                            width="17%"
                            title="<?= $this->translate('Payment Actions') ?>">
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($this->transactions as $transaction) { ?>
                        <tr>
                            <td>
                                <?= $this->escape($transaction['id']); ?>
                            </td>
                            <td>
                                <?php 
                                    if (!empty($transaction['customerLastName']) 
                                        || !empty($transaction['customerFirstName'])) {
                                        
                                        echo $this->escape(
                                            $transaction['customerLastName'] . ', ' 
                                            . $transaction['customerFirstName']
                                        );
                                    }
                                ?>
                            </td>
                            <td>
                                <?= $this->escape($transaction['transactionDate']->toString('yyyy-MM-dd')); ?>
                            </td>
                            <td>
                                <?= $this->currency($transaction['total']) ?>
                            </td>
                            <td>
                                <?= $this->currency($transaction['remainingToApply']) ?>
                            </td>
                            <td>
                                <?php if (!empty($transaction['appliedToInvoices'])) { ?>
                                    <?php
                                        if (strpos($transaction['appliedToInvoices'], ',')) {
                                            $invoices = explode(',', $transaction['appliedToInvoices']);
                                        } else {
                                            $invoices = array($transaction['appliedToInvoices']);
                                        }
                                    ?>
                                    <?php for ($count = count($invoices), $c = 0; $c < $count; ++$c) { ?>
                                        <a href="/admin/customers/invoice?id=<?= (int) $invoices[$c] ?>"><?= (int) $invoices[$c] ?></a><?= ($c + 1 != $count) ? '; ' : '' ?>
                                    <?php } ?>
                                <?php } ?>
                            </td>
                            <td class="right">
                                <ul class="dropdown-container">
                                    <li class="dropdown btn-group">
                                        <a href="/admin/customers/transaction?id=<?= (int) $transaction->id ?>"
                                           title="<?= $this->translate('View payment') ?>"
                                           class="btn">
                                            <?= $this->translate('View') ?>
                                        </a>
                                        <button type="button"
                                                class="btn dropdown-toggle"
                                                data-toggle="dropdown">
                                            <span class="caret"></span>
                                        </button>

                                        <ul class="dropdown-menu">
                                            <?php if (!empty($transaction->customerEmail) || !empty($transaction->customerSecondaryEmail)) { ?>
                                            <li><a href="/admin/customers/email?id=<?= (int) $transaction->customerId ?>"><?= $this->translate('Email Customer') ?></a></li>
                                            <?php } ?>
                                            <li class="divider"></li>
                                            <li><a class="delete" href="/admin/customers/transaction?a=delete&id=<?= (int) $transaction->id ?>"><?= $this->translate('Delete') ?></a></li>
                                        </ul>
                                    </li>
                                </ul>
                                
                            </td>
                        </tr>
                    <?php } ?>
                </tbody>
            </table>

        <?php } else { ?>

            <p><?=
                $this->translate(
                    'You don\'t have any payments yet.'
                ); ?></p>

        <?php } ?>
    </article>

    <?= $this->render('admin-sub-nav.phtml'); ?>
</section>
